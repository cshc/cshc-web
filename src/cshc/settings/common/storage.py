from os.path import join, normpath
from cshc.settings.base import get_env_setting, SITE_ROOT

# ########## django-s3-folder-storage CONFIGURATION

# Ref: https://github.com/jamstooks/django-s3-folder-storage
# Creds
AWS_QUERYSTRING_AUTH = False
AWS_ACCESS_KEY_ID = get_env_setting('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = get_env_setting('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = get_env_setting('AWS_STORAGE_BUCKET_NAME')

# Uploaded Media Folder
# DEFAULT_FILE_STORAGE = 'cshc.util.FixedDefaultStorage'
DEFAULT_FILE_STORAGE = 's3_folder_storage.s3.DefaultStorage'
DEFAULT_S3_PATH = "media"
MEDIA_ROOT = normpath(join(SITE_ROOT, DEFAULT_S3_PATH))
MEDIA_URL = '//%s.s3.amazonaws.com/media/' % AWS_STORAGE_BUCKET_NAME

# Static media folder
# STATICFILES_STORAGE = 'cshc.util.FixedStaticStorage'
STATICFILES_STORAGE = 's3_folder_storage.s3.StaticStorage'
STATIC_S3_PATH = "static"
STATIC_ROOT = normpath(join(SITE_ROOT, 'assets'))
STATIC_URL = '//%s.s3.amazonaws.com/static/' % AWS_STORAGE_BUCKET_NAME

AWS_IS_GZIPPED = True

# Add support for browser caching
# Note: the cache is busted in one of three ways:
# 1. css/js files: django-compressor will generate a new (hash-based) filename when the file content is changed
# 2. thumbnail files generated by sorl-thumbnail: you must give the new version of the static resource a different name.
# 3. all other file types: add the 'versioned_url' filter (from cshc_tags) to the static file's url in the template.
#    This will append '?version={{ VERSION }}' to the URL, forcing the browser to ditch its cached version (TBC)
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',    # 1 year
}

# ########## END django-s3-folder-storage CONFIGURATION

# Needed for collectfast
AWS_PRELOAD_METADATA = True

# Needed for django-compressor
COMPRESS_URL = STATIC_URL
COMPRESS_STORAGE = 's3_folder_storage.s3.DefaultStorage'
